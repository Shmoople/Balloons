/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package balloons; // this package name can change in a future version of the project (for the time being its just balloons because why the fuck not)

import javafx.application.Application; // the application calss used for all javafx applications
import javafx.scene.Group; 
import javafx.scene.Scene;
import javafx.scene.shape.Circle;
import javafx.stage.Stage;

public class App extends Application {


    /*
     * This project is now using a gradle build, this means that all dependencies are locally resolved within the repository itself
     * so you won't have to setup javafx for the project!
     * 
     * If you want to run the project don't use the built in run configuration (the conveniently placed run button above the main method,
     * instead use the command line and run "gradlew.bat" although this isn't as pretty it is much easier to do it this way than have
     * every individual install javafx dependencies on their system (you don't need to have javafx installed in order to run this project
     * since all the dependencies will be downloaded and linked automatically by gradle!))
     * 
     * There are some other things that need to be taken into account when working with some other version of gradle, however for this project
     * we're using the latest version that is backwards compatible with javafx 8 and 19.
     * 
     * Alright, now that's out of the way... onto some actual programming!
     * 
     * wait... before that I would like to be able to view all gradle options and configurations that can be used for some other projects!
     * 
     * 
     */
    @Override
    public void start(Stage primaryStage) {
        
        Group group = new Group();

        /* create nodes */

        /* create connections */

        /* wait... this is the main file*/

        /* graphics build configuration */

        group.getChildren().add(new Circle(5));

        // the getChildren method isn't required when working with the primaryStage (however there are some workaround for that instead)


        primaryStage.setScene(new Scene(group));
        primaryStage.show();
    }

    // import the rest of the project in order to continue with the rest of the project!

    // what the fuck this is dumb

    // astar algorithm could be placed into jar files and then added to the project, but that isn't going to work for this situation

    // I know that gradle handles dependencies really well for the most part, however it doesn't really like userdefined packages

    // plus actually moving those into jar files would be a pain in the ass!

    // ok, grab the files from group project and place them under the balloons package....
    // public static void displayGraph(Graph graph) { 

//     }

    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        App.launch(args);
    }
}

// end of file
